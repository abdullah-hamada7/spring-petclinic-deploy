---
services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    volumes:
      - ./certs/nginx.crt:/etc/nginx/certs/nginx.crt:ro
      - ./certs/nginx.key:/etc/nginx/certs/nginx.key:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - frontend
      - backend
  app:
    image: abdullahhamada7/spring-petclinic:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-petclinic
    # ports:
    #   - "${APP_PORT}:8080"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql/${MYSQL_DATABASE}"
      SPRING_DATASOURCE_USERNAME: "${MYSQL_USER}"
      # SPRING_DATASOURCE_PASSWORD_FILE: /run/secrets/mysql_password
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    secrets:
      - mysql_password
    networks:
      - backend

  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
    volumes:
      - mysql_data:/var/lib/mysql
    secrets:
      - mysql_root_password
      - mysql_password
    configs:
      - source: mysql_config
        target: /etc/mysql/conf.d/my.conf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend

volumes:
  mysql_data:

configs:
  mysql_config:
    file: ./configs/my.conf
  nginx_config:
    file: ./nginx/nginx.conf

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: "10.0.0.0/24"
          gateway: "10.0.0.1"
